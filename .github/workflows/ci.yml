name: CI

on:
  push:
    branches-ignore:
    - 'dependabot/**'
    paths:
    - '**'
    - '!docs/**'
    - '!.github/**'
    - '.github/**/*ci*'
    tags:
      - 'v*'
  pull_request:
    paths:
    - '**'
    - '!docs/**'
    - '!.github/**'
    - '.github/**/*ci*'

env:
  LC_ALL: en_US.UTF-8
  IMAGE_NAME: kdex-gateman

defaults:
  run:
    shell: bash

permissions:
  packages: write
  contents: read

jobs:
  ci:
    name: Run on Ubuntu
    runs-on: ubuntu-latest
    steps:
      - name: Clone the code
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '~1.23.0'

      - name: Run Tidy
        run: |
          go mod tidy

      # - name: Run Linter
      #   uses: golangci/golangci-lint-action@v6
      #   with:
      #     version: v1.61

      # - name: Run Unit Tests
      #   run: |
      #     make test

      # - name: Install the latest version of kind
      #   run: |
      #     curl -Lo ./kind https://kind.sigs.k8s.io/dl/latest/kind-linux-amd64
      #     chmod +x ./kind
      #     sudo mv ./kind /usr/local/bin/kind

      # - name: Verify kind installation
      #   run: |
      #     kind version

      # - name: Create kind cluster
      #   run: |
      #     kind create cluster

      # - name: Running E2E Tests
      #   run: |
      #     make test-e2e

      - name: Log in to registry
        if: ${{ (github.repository == 'kdex-tech/kdex-gateman') && startsWith(github.ref, 'refs/tags/') && (github.event_name != 'pull_request') }}
        run: |
          echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

      - name: Push image
        if: ${{ (github.repository == 'kdex-tech/kdex-gateman') && startsWith(github.ref, 'refs/tags/') && (github.event_name != 'pull_request') }}
        run: |
          IMAGE_ID=ghcr.io/${{ github.repository_owner }}/$IMAGE_NAME

          # This changes all uppercase characters to lowercase.
          IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
          # This strips the git ref prefix from the version.
          VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
          # This strips the "v" prefix from the tag name.
          [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
          # This uses the Docker `latest` tag convention.
          [ "$VERSION" == "main" ] && VERSION=latest

          echo GITHUB_REF=${{ github.ref }}
          echo IMAGE_ID=$IMAGE_ID
          echo VERSION=$VERSION
          export IMG=$IMAGE_ID:$VERSION
          make docker-buildx
